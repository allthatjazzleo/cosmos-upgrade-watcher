name: docker-build-and-push
on:
  push:
    tags:
      - v[0-9]+.*
  workflow_dispatch:
    inputs:
      release_tag:
        description: "The desired tag for the release (e.g. v0.1.0)."
        required: true

env:
  REGISTRY: ${{ vars.REGISTRY || format('ghcr.io/{0}', github.repository_owner) }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME || github.event.repository.name }}
  BUILD_ARGS: ${{ vars.BUILD_ARGS || '' }}
  BUILD_ARCH: ${{ vars.BUILD_ARCH || 'linux/amd64,linux/arm64' }}

# Set concurrency for this workflow to cancel in-progress jobs if retriggered.
# The github.ref is only available when triggered by a PR so fall back to github.run_id for other cases.
# The github.run_id is unique for each run, giving each such invocation it's own unique concurrency group.
# Basically, if you push to a PR branch, jobs that are still running for that PR will be cancelled.
# But jobs started because of a merge to main or a release tag push are not cancelled.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true
jobs:
  docker-build:
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-latest
    steps:
    - uses: mantra-chain-tech/infra-github-actions-mantrachain/docker-buildx-v1@main
      with:
        container_repository: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        build_context: ./
        build_args: ${{ env.BUILD_ARGS }}
        registry: ${{ env.REGISTRY }}
        registry_username: ${{ github.actor }}
        registry_password: ${{ secrets.GITHUB_TOKEN }}
        arch: ${{ env.BUILD_ARCH}}
        docker_push: true
